{"version":3,"sources":["index.js"],"names":["GiveRand","min","max","Math","floor","random","Main","props","state","board","gmaeOver","x1","x2","y1","y2","this","setState","Board","blankCoordinates","r","length","c","push","getBlankCoordinates","randomCoordinate","randomNumber","original","updated","JSON","stringify","b","deepcopy","a","i","j","p","temp","k","isChanged","placeRand","up","down","right","left","includes","initBoard","document","querySelector","addEventListener","handleKeyDown","bind","e","console","log","keyCode","makeMove","dir","isGameOver","map","row","Row","className","onClick","React","Component","cell","Cell","cellValue","color","value","ReactDOM","render","getElementById"],"mappings":"4LAIA,SAASA,EAASC,EAAKC,GAErB,OADQC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,G,IAM7CK,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,CACL,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEZC,UAAU,GAVK,E,6CAcnB,WACE,IAAID,EAAQ,CACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAERE,EAAKX,EAAS,EAAG,GACnBY,EAAKZ,EAAS,EAAG,GACjBa,EAAKb,EAAS,EAAG,GACjBc,EAAKd,EAAS,EAAG,GACnBS,EAAME,GAAIE,GAAM,EAAIb,EAAS,EAAG,GAChCS,EAAMG,GAAIE,GAAM,EAAId,EAAS,EAAG,GAChCe,KAAKC,SAAS,CAAEP,QAAOC,UAAU,M,iCAGnC,SAAoBO,GAIlB,IAFA,IAAMC,EAAmB,GAEhBC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAChC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAME,GAAGC,OAAQC,IACf,IAAhBJ,EAAME,GAAGE,IACXH,EAAiBI,KAAK,CAACH,EAAGE,IAKhC,OAAOH,I,uBAGT,SAAUT,GACR,IAAMS,EAAmBH,KAAKQ,oBAAoBd,GAC5Ce,EAAmBN,EAAiBf,KAAKC,MAAMD,KAAKE,SAAWa,EAAiBE,SAChFK,EAAe,EAAEzB,EAAS,EAAE,GAGlC,OADAS,EAAMe,EAAiB,IAAIA,EAAiB,IAAMC,EAC3ChB,I,uBAGT,SAAUiB,EAAUC,GAClB,OAAQC,KAAKC,UAAUF,KAAaC,KAAKC,UAAUH,K,gBAIrD,SAAGjB,GAID,IAHA,IAAIqB,EAAIC,EAAStB,GACXuB,EAAID,EAASD,GAEVG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAK,EAAEA,IACjB,GAAa,IAAVJ,EAAEI,GAAGD,GAAO,CAEb,IADA,IAAIE,EAAED,EAAE,EACFC,EAAE,GAAe,IAAVL,EAAEK,GAAGF,IAChBE,IAEF,GAAO,IAAJA,EACH,MACA,IAAIC,EAAKN,EAAEK,GAAGF,GACdH,EAAEK,GAAGF,GAAGH,EAAEI,GAAGD,GACbH,EAAEI,GAAGD,GAAGG,EAId,IAAK,IAAIH,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IACd,GAAGJ,EAAEI,GAAGD,KAAKH,EAAEI,EAAE,GAAGD,GACpB,CACEH,EAAEI,GAAGD,IAAI,EAET,IADA,IAAII,EAAEH,EAAE,EACFG,EAAE,GACNP,EAAEO,GAAGJ,GAAGH,EAAEO,EAAE,GAAGJ,GACfI,IAEFP,EAAEO,GAAGJ,GAAG,EAQd,OAHGlB,KAAKuB,UAAUN,EAAEF,KACjBA,EAAIf,KAAKwB,UAAUT,IAEfA,I,kBAGT,SAAKrB,GAIH,IAHA,IAAIqB,EAAIC,EAAStB,GACXuB,EAAID,EAASD,GAEVG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAK,EAAGA,IAClB,GAAa,IAAVJ,EAAEI,GAAGD,GAAO,CAEb,IADA,IAAIE,EAAED,EAAE,EACFC,GAAG,GAAe,IAAVL,EAAEK,GAAGF,IACjBE,IAEF,IAAQ,IAALA,EACH,MACA,IAAIC,EAAKN,EAAEK,GAAGF,GACdH,EAAEK,GAAGF,GAAGH,EAAEI,GAAGD,GACbH,EAAEI,GAAGD,GAAGG,EAId,IAAK,IAAIH,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IACd,GAAGJ,EAAEI,GAAGD,KAAKH,EAAEI,EAAE,GAAGD,GACpB,CACEH,EAAEI,GAAGD,IAAI,EAET,IADA,IAAII,EAAEH,EAAE,EACFG,EAAE,GACNP,EAAEO,GAAGJ,GAAGH,EAAEO,EAAE,GAAGJ,GACfI,IAEFP,EAAEO,GAAGJ,GAAG,EAQf,OAHIlB,KAAKuB,UAAUN,EAAEF,KACjBA,EAAIf,KAAKwB,UAAUT,IAEhBA,I,mBAGR,SAAMrB,GAIJ,IAHA,IAAIqB,EAAIC,EAAStB,GACXuB,EAAID,EAASD,GAEVG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAK,EAAGA,IAClB,GAAa,IAAVJ,EAAEG,GAAGC,GAAO,CAEb,IADA,IAAIC,EAAED,EAAE,EACFC,GAAG,GAAe,IAAVL,EAAEG,GAAGE,IACjBA,IAEF,IAAQ,IAALA,EACH,MACA,IAAIC,EAAKN,EAAEG,GAAGE,GACdL,EAAEG,GAAGE,GAAGL,EAAEG,GAAGC,GACbJ,EAAEG,GAAGC,GAAGE,EAId,IAAK,IAAIH,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IACd,GAAGJ,EAAEG,GAAGC,KAAKJ,EAAEG,GAAGC,EAAE,GACpB,CACEJ,EAAEG,GAAGC,IAAI,EAET,IADA,IAAIG,EAAEH,EAAE,EACFG,EAAE,GACNP,EAAEG,GAAGI,GAAGP,EAAEG,GAAGI,EAAE,GACfA,IAEFP,EAAEG,GAAGI,GAAG,EAQf,OAHItB,KAAKuB,UAAUN,EAAEF,KACjBA,EAAIf,KAAKwB,UAAUT,IAEhBA,I,kBAGR,SAAKrB,GAIH,IAHA,IAAIqB,EAAIC,EAAStB,GACXuB,EAAID,EAASD,GAEVG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAK,EAAEA,IACjB,GAAa,IAAVJ,EAAEG,GAAGC,GAAO,CAEb,IADA,IAAIC,EAAED,EAAE,EACFC,EAAE,GAAe,IAAVL,EAAEG,GAAGE,IAChBA,IAEF,GAAO,IAAJA,EACH,MACA,IAAIC,EAAKN,EAAEG,GAAGE,GACdL,EAAEG,GAAGE,GAAGL,EAAEG,GAAGC,GACbJ,EAAEG,GAAGC,GAAGE,EAId,IAAK,IAAIH,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IACd,GAAGJ,EAAEG,GAAGC,KAAKJ,EAAEG,GAAGC,EAAE,GACpB,CACEJ,EAAEG,GAAGC,IAAI,EAET,IADA,IAAIG,EAAEH,EAAE,EACFG,EAAE,GACNP,EAAEG,GAAGI,GAAGP,EAAEG,GAAGI,EAAE,GACfA,IAEFP,EAAEG,GAAGI,GAAG,EAQf,OAHItB,KAAKuB,UAAUN,EAAEF,KACjBA,EAAIf,KAAKwB,UAAUT,IAEhBA,I,wBAGR,SAAWrB,GAST,OARc,CACZM,KAAKuB,UAAU7B,EAAMM,KAAKyB,GAAG/B,IAC7BM,KAAKuB,UAAU7B,EAAMM,KAAK0B,KAAKhC,IAC/BM,KAAKuB,UAAU7B,EAAMM,KAAK2B,MAAMjC,IAChCM,KAAKuB,UAAU7B,EAAMM,KAAK4B,KAAKlC,KAIfmC,UAAS,K,gCAI7B,WACE7B,KAAK8B,YACQC,SAASC,cAAc,QAC/BC,iBAAiB,UAAWjC,KAAKkC,cAAcC,KAAKnC,S,2BAG3D,SAAcoC,GAMZC,QAAQC,IAAIF,EAAEG,SALH,KAMPH,EAAEG,QACJvC,KAAKwC,SAAS,MANF,KAOHJ,EAAEG,QACXvC,KAAKwC,SAAS,SAPH,KAQFJ,EAAEG,QACXvC,KAAKwC,SAAS,QARH,KASFJ,EAAEG,QACXvC,KAAKwC,SAAS,QATN,KAUCJ,EAAEG,SACXvC,KAAK8B,c,sBAOT,SAASW,GACP,IAAIzC,KAAKP,MAAME,SACb,GAAS,OAAN8C,EAAW,CACZ,IAAM1B,EAAIf,KAAKyB,GAAGzB,KAAKP,MAAMC,OAC1BM,KAAK0C,WAAW3B,GACjBf,KAAKC,SAAS,CAACP,MAAMqB,EAAGpB,UAAS,IAC9BK,KAAKC,SAAS,CAACP,MAAMqB,EAAEpB,UAAS,SAElC,GAAS,SAAN8C,EAAa,CACnB,IAAM1B,EAAIf,KAAK0B,KAAK1B,KAAKP,MAAMC,OAC5BM,KAAK0C,WAAW3B,GACjBf,KAAKC,SAAS,CAACP,MAAMqB,EAAGpB,UAAS,IAC9BK,KAAKC,SAAS,CAACP,MAAMqB,EAAEpB,UAAS,SAElC,GAAS,UAAN8C,EAAc,CACpB,IAAM1B,EAAIf,KAAK2B,MAAM3B,KAAKP,MAAMC,OAC7BM,KAAK0C,WAAW3B,GACjBf,KAAKC,SAAS,CAACP,MAAMqB,EAAGpB,UAAS,IAC9BK,KAAKC,SAAS,CAACP,MAAMqB,EAAEpB,UAAS,SAElC,GAAS,SAAN8C,EAAa,CACnB,IAAM1B,EAAIf,KAAK4B,KAAK5B,KAAKP,MAAMC,OAC5BM,KAAK0C,WAAW3B,GACjBf,KAAKC,SAAS,CAACP,MAAMqB,EAAGpB,UAAS,IAC9BK,KAAKC,SAAS,CAACP,MAAMqB,EAAEpB,UAAS,O,oBAM3C,WAAU,IAAD,OACP,OACE,gCACE,uCACA,gCACGK,KAAKP,MAAMC,MAAMiD,KAAI,SAACC,EAAK1B,GAAN,OACpB,cAAC2B,EAAD,CAAaD,IAAKA,GAAR1B,QAGd,qBACE4B,UAAU,SACVC,QAAS,WACP,EAAKjB,aAHT,sBAQA,sBAAKgB,UAAU,UAAf,UACE,qBACEA,UAAU,SACVC,QAAS,WACP,EAAKP,SAAS,OAHlB,gBAQA,qBACEM,UAAU,SACVC,QAAS,WACP,EAAKP,SAAS,SAHlB,kBAQA,qBACEM,UAAU,SACVC,QAAS,WACP,EAAKP,SAAS,UAHlB,mBAQA,qBACEM,UAAU,SACVC,QAAS,WACP,EAAKP,SAAS,SAHlB,qBAUF,6BAAKxC,KAAKP,MAAME,SAAS,aAAa,qB,GAxV3BqD,IAAMC,WA8VnBJ,EAAM,SAAC,GAAa,IAAXD,EAAU,EAAVA,IACb,OACE,6BACGA,EAAID,KAAI,SAACO,EAAMhC,GAAP,OACP,cAACiC,EAAD,CAAcC,UAAWF,GAAdhC,SAObiC,EAAO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACVC,EAAQ,OACRC,EAAuB,IAAdF,EAAmB,GAAKA,EAKrC,OAJIE,IACFD,GAAK,iBAAcC,IAInB,6BACE,qBAAKR,UAAWO,EAAhB,SACE,qBAAKP,UAAU,SAAf,SAAyBQ,SAMjCC,IAASC,OAAO,cAACjE,EAAD,IAAUwC,SAAS0B,eAAe,U","file":"static/js/main.7a781bb4.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './App.css';\nimport * as deepcopy from \"deepcopy\";\nfunction GiveRand(min, max) {\n  var p = Math.floor(Math.random() * (max - min) + min);\n  return p;\n}\n\n\n//For touch sense\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      board: [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      gmaeOver: false,\n    };\n  }\n\n  initBoard() {\n    let board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    let x1 = GiveRand(0, 4),\n      x2 = GiveRand(0, 4),\n      y1 = GiveRand(0, 4),\n      y2 = GiveRand(0, 4);\n    board[x1][y1] = 2 * GiveRand(1, 3);\n    board[x2][y2] = 2 * GiveRand(1, 3);\n    this.setState({ board, gmaeOver: false });\n  }\n\n  getBlankCoordinates(Board) {\n    \n    const blankCoordinates = [];\n\n    for (let r = 0; r < Board.length; r++) {\n      for (let c = 0; c < Board[r].length; c++) {\n        if (Board[r][c] === 0) {\n          blankCoordinates.push([r, c]);\n        }\n      }\n    }\n\n    return blankCoordinates;\n  }\n\n  placeRand(board) {\n    const blankCoordinates = this.getBlankCoordinates(board);\n    const randomCoordinate = blankCoordinates[Math.floor(Math.random() * blankCoordinates.length)];\n    const randomNumber = 2*GiveRand(1,3);\n    \n    board[randomCoordinate[0]][randomCoordinate[1]] = randomNumber;\n    return board;\n  }\n\n  isChanged(original, updated) {\n    return (JSON.stringify(updated) === JSON.stringify(original)) ? false : true;\n  }\n\n\n  up(board) {\n    let b = deepcopy(board);\n    const a = deepcopy(b);\n    \n    for (let i = 0; i < 4; i++) {\n      for(let j=0;j  < 4;j++){\n        if(b[j][i]===0){\n          var p=j+1;\n          while(p<4 && b[p][i]===0 ){\n            p++\n          }\n          if(p===4)\n          break;\n          var temp=b[p][i];\n          b[p][i]=b[j][i]\n          b[j][i]=temp\n        }\n      }\n    }\n    for (let i = 0; i < 4; i++) {\n      for(let j=0;j<3;j++){\n        if(b[j][i]===b[j+1][i])\n        {\n          b[j][i]*=2\n          var k=j+1\n          while(k<3){\n            b[k][i]=b[k+1][i]\n            k++\n          }\n          b[k][i]=0\n        }\n      }\n    }\n    \n    if(this.isChanged(a,b))\n      {b = this.placeRand(b)}\n      \n    return b;\n  }\n\n  down(board) {\n    let b = deepcopy(board);\n    const a = deepcopy(b);\n    \n    for (let i = 0; i < 4; i++) {\n      for(let j=3;j  > 0 ;j--){\n        if(b[j][i]===0){\n          var p=j-1;\n          while(p>=0 && b[p][i]===0 ){\n            p--\n          }\n          if(p===-1)\n          break;\n          var temp=b[p][i];\n          b[p][i]=b[j][i]\n          b[j][i]=temp\n        }\n      }\n    }\n    for (let i = 0; i < 4; i++) {\n      for(let j=3;j>0;j--){\n        if(b[j][i]===b[j-1][i])\n        {\n          b[j][i]*=2\n          var k=j-1\n          while(k>0){\n            b[k][i]=b[k-1][i]\n            k--\n          }\n          b[k][i]=0\n        }\n      }\n    }\n    \n    if(this.isChanged(a,b))\n      {b = this.placeRand(b)}\n\n   return b;\n  }\n\n  right(board) {\n    let b = deepcopy(board);\n    const a = deepcopy(b);\n    \n    for (let i = 0; i < 4; i++) {\n      for(let j=3;j  > 0 ;j--){\n        if(b[i][j]===0){\n          var p=j-1;\n          while(p>=0 && b[i][p]===0 ){\n            p--\n          }\n          if(p===-1)\n          break;\n          var temp=b[i][p];\n          b[i][p]=b[i][j]\n          b[i][j]=temp\n        }\n      }\n    }\n    for (let i = 0; i < 4; i++) {\n      for(let j=3;j>0;j--){\n        if(b[i][j]===b[i][j-1])\n        {\n          b[i][j]*=2\n          var k=j-1\n          while(k>0){\n            b[i][k]=b[i][k-1]\n            k--\n          }\n          b[i][k]=0\n        }\n      }\n    }\n    \n    if(this.isChanged(a,b))\n      {b = this.placeRand(b)}\n\n   return b;\n  }\n\n  left(board) {\n    let b = deepcopy(board);\n    const a = deepcopy(b);\n    \n    for (let i = 0; i < 4; i++) {\n      for(let j=0;j  < 4;j++){\n        if(b[i][j]===0){\n          var p=j+1;\n          while(p<4 && b[i][p]===0 ){\n            p++\n          }\n          if(p===4)\n          break;\n          var temp=b[i][p];\n          b[i][p]=b[i][j]\n          b[i][j]=temp\n        }\n      }\n    }\n    for (let i = 0; i < 4; i++) {\n      for(let j=0;j<3;j++){\n        if(b[i][j]===b[i][j+1])\n        {\n          b[i][j]*=2\n          var k=j+1\n          while(k<3){\n            b[i][k]=b[i][k+1]\n            k++\n          }\n          b[i][k]=0\n        }\n      }\n    }\n    \n    if(this.isChanged(a,b))\n      {b = this.placeRand(b)}\n\n   return b;\n  }\n\n  isGameOver(board){\n    let PossMoves=[\n      this.isChanged(board,this.up(board)),\n      this.isChanged(board,this.down(board)),\n      this.isChanged(board,this.right(board)),\n      this.isChanged(board,this.left(board))\n\n    ]\n\n    return (PossMoves.includes(true))?false:true;\n\n  }\n\n  componentWillMount() {\n    this.initBoard();  \n    const body = document.querySelector('body');\n    body.addEventListener('keydown', this.handleKeyDown.bind(this));\n  }\n  \n  handleKeyDown(e) {\n    const up = 38;\n    const right = 39;\n    const down = 40;\n    const left = 37\n    const n = 78;\n    console.log(e.keyCode)\n    if (e.keyCode === up) {\n      this.makeMove('up');\n    } else if (e.keyCode === right) {\n      this.makeMove('right');\n    } else if (e.keyCode === down) {\n      this.makeMove('down');\n    } else if (e.keyCode === left) {\n      this.makeMove('left');\n    } else if (e.keyCode === n) {\n      this.initBoard();\n    }\n  }\n\n\n\n\n  makeMove(dir){\n    if(!this.state.gmaeOver){\n      if(dir==='up'){\n        const b = this.up(this.state.board);\n        if(this.isGameOver(b))\n          this.setState({board:b, gmaeOver:true});\n        else this.setState({board:b,gmaeOver:false});\n      }\n      else if(dir==='down'){\n        const b = this.down(this.state.board);\n        if(this.isGameOver(b))\n          this.setState({board:b, gmaeOver:true});\n        else this.setState({board:b,gmaeOver:false});\n      }\n      else if(dir==='right'){\n        const b = this.right(this.state.board);\n        if(this.isGameOver(b))\n          this.setState({board:b, gmaeOver:true});\n        else this.setState({board:b,gmaeOver:false});\n      }\n      else if(dir==='left'){\n        const b = this.left(this.state.board);\n        if(this.isGameOver(b))\n          this.setState({board:b, gmaeOver:true});\n        else this.setState({board:b,gmaeOver:false});\n      }\n    }\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <h1>2048!</h1>\n        <table>\n          {this.state.board.map((row, i) => (\n            <Row key={i} row={row} />\n          ))}\n        </table>\n        <div\n          className=\"button\"\n          onClick={() => {\n            this.initBoard();\n          }}\n        >\n          New Game\n        </div>\n        <div className=\"buttons\">\n          <div\n            className=\"button\"\n            onClick={() => {\n              this.makeMove('up');\n            }}\n          >\n            Up\n          </div>\n          <div\n            className=\"button\"\n            onClick={() => {\n              this.makeMove('down');\n            }}\n          >\n            down\n          </div>\n          <div\n            className=\"button\"\n            onClick={() => {\n              this.makeMove('right');\n            }}\n          >\n            right\n          </div>\n          <div\n            className=\"button\"\n            onClick={() => {\n              this.makeMove('left');\n            }}\n          >\n            Left\n          </div>\n        </div>\n        \n        <h2>{this.state.gmaeOver?\"Game Over!\":\"Game on!!\"}</h2>\n      </div>\n    );\n  }\n}\n\nconst Row = ({ row }) => {\n  return (\n    <tr>\n      {row.map((cell, i) => (\n        <Cell key={i} cellValue={cell} />\n      ))}\n    </tr>\n  );\n};\n\n\nconst Cell = ({ cellValue }) => {\n  let color = 'cell';\n  let value = (cellValue === 0) ? '' : cellValue;\n  if (value) {\n    color += ` color-${value}`;\n  }\n\n  return (\n    <td>\n      <div className={color}>\n        <div className=\"number\">{value}</div>\n      </div>\n    </td>\n  );\n};\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}